PARSER_BEGIN(Lugosi)
import java.io.*;
public class Lugosi {

  public static void main(String args[]) throws ParseException,IOException {
    
 Lugosi analisador = new Lugosi(new FileInputStream(args[0]));
 analisador.Lugosi();
  }

}

PARSER_END(Lugosi)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <VAR: "var">
| <SEMI: ";">
| <INT:"int">
| <BOOL:"bool">
| <ATTRIB:":=">
| <APARENT: "(">
| <FPARENT: ")">
| <IF:"if">
| <WHILE:"while">
| <DO:"do">
| <RETURN:"return">
| <PRINT:"print">
| <TRUE:"true">
| <FALSE:"false">
| <OPSOMA:"+">
| <OPSUB:"-">
| <OPMULT:"*">
| <OPDIV:"/">
| <OPAND:"&&">
| <OPOR:"||">
| <OPMENORQ:"<">
| <OPMAIORQ:">">
| <OPIGUAL:"==">
| <OPCOMMA:",">
| <FUNCTION: "function">

}

TOKEN :
{
  <NUM : (["0"-"9"])+>
 |< ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])*>

}



void Lugosi () :
{Token t;}
{

(
  <MAIN> { System.out.println("Palavra reservada: main");}
| <ACHAVES> { System.out.println("Abre chaves: {");}
| <FCHAVES> { System.out.println("Fecha chaves: }");}
| t=<NUM> { System.out.println("Número: "+ t.image);}
| t=<ID> { System.out.println("Identificador: "+ t.image);}
| <VAR>  { System.out.println("Palavra reservada: var");}
| <SEMI> { System.out.println("Ponto e vírgula: ;");}
| <INT> { System.out.println("Palavra reservada: int");}
| <BOOL> { System.out.println("Palavra reservada: bool");}
| <ATTRIB> { System.out.println("Atribuição: :=");}
| <APARENT> { System.out.println("Abre parênteses: (");}
| <FPARENT> { System.out.println("Fecha parênteses: )");}
| <IF> { System.out.println("Palavra reservada: if");}
| <WHILE> { System.out.println("Palavra reservada: while");}
| <DO> { System.out.println("Palavra reservada: do");}
| <RETURN> { System.out.println("Palavra reservada: return");}
| <PRINT> { System.out.println("Palavra reservada: print");}
| <TRUE> { System.out.println("Palavra reservada: true");}
| <FALSE> { System.out.println("Palavra reservada: false");}
| <OPSOMA> { System.out.println("Operador soma: +");}
| <OPSUB> { System.out.println("Operador subtração: -");}
| <OPMULT> { System.out.println("Operador multiplicação: *");}
| <OPDIV> { System.out.println("Operador divisão: /");}
| <OPAND> { System.out.println("Operador and: &&");}
| <OPOR> { System.out.println("Operador or: ||");}
| <OPMENORQ> { System.out.println("Operador menor que: <");}
| <OPMAIORQ>{ System.out.println("Operador maior que: >");}
| <OPIGUAL> { System.out.println("Operador igualdade: ==");}
| <OPCOMMA> { System.out.println("Operador virgula: ,");}
| <FUNCTION> { System.out.println("Palavra reservada: function");}

)*
<EOF> 


}





